# Generated by Django 5.2.6 on 2025-09-30 02:25

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('homepage', '0004_alter_temperature_timestamp'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='temperature',
            options={'ordering': ['-timestamp'], 'verbose_name': 'Temperature Reading', 'verbose_name_plural': 'Temperature Readings'},
        ),
        migrations.AlterField(
            model_name='temperature',
            name='humidity',
            field=models.FloatField(blank=True, help_text='Relative humidity percentage', null=True, validators=[django.core.validators.MinValueValidator(0.0, message='Humidity cannot be below 0%'), django.core.validators.MaxValueValidator(100.0, message='Humidity cannot be above 100%')]),
        ),
        migrations.AlterField(
            model_name='temperature',
            name='location',
            field=models.CharField(db_index=True, help_text='Location where temperature was measured', max_length=100),
        ),
        migrations.AlterField(
            model_name='temperature',
            name='temperature',
            field=models.FloatField(help_text='Temperature in Celsius', validators=[django.core.validators.MinValueValidator(-50.0, message='Temperature cannot be below -50°C'), django.core.validators.MaxValueValidator(70.0, message='Temperature cannot be above 70°C')]),
        ),
        migrations.AlterField(
            model_name='temperature',
            name='timestamp',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AddIndex(
            model_name='temperature',
            index=models.Index(fields=['location', 'timestamp'], name='homepage_te_locatio_ba1ecc_idx'),
        ),
        migrations.AddIndex(
            model_name='temperature',
            index=models.Index(fields=['timestamp', 'location'], name='homepage_te_timesta_155db3_idx'),
        ),
        migrations.AddConstraint(
            model_name='temperature',
            constraint=models.UniqueConstraint(fields=('location', 'timestamp'), name='unique_location_timestamp'),
        ),
    ]
